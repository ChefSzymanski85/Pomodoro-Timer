{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rosej\\\\Thinkful\\\\qualified-challenges\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\components\\\\Break.js\";\nimport React, { useState } from \"react\";\nimport { secondsToDuration } from \"../../utils/duration\";\n\nconst Break = () => {\n  const [breakLength, setBreakLength] = useState(60 * 5);\n\n  const decrementBreakLengthByOneMinute = () => {\n    const newBreakLength = breakLength - 60;\n\n    if (newBreakLength < 60) {\n      setBreakLength(60);\n    } else if (newBreakLength > 60 * 15) {\n      setBreakLength(60 * 15);\n    } else {\n      setBreakLength(newBreakLength);\n    }\n  };\n\n  const incrementBreakLengthByOneMinute = () => {\n    setBreakLength(breakLength + 60);\n  };\n\n  function breakLengthInMinutesFunc(time) {\n    const minutes = Math.floor(time / 60);\n    const seconds = time % 60; // get the remainder\n\n    return `${minutes}:${seconds}0`;\n  }\n\n  const breakLengthInMinutes = secondsToDuration(breakLength);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    \"data-testid\": \"duration-break\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    id: \"break-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, \"Break Duration: \", breakLengthInMinutes)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"decrease-break\",\n    onClick: decrementBreakLengthByOneMinute,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-minus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"increase-break\",\n    onClick: incrementBreakLengthByOneMinute,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }))))));\n};\n\nexport default Break;","map":{"version":3,"sources":["C:/Users/rosej/Thinkful/qualified-challenges/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/components/Break.js"],"names":["React","useState","secondsToDuration","Break","breakLength","setBreakLength","decrementBreakLengthByOneMinute","newBreakLength","incrementBreakLengthByOneMinute","breakLengthInMinutesFunc","time","minutes","Math","floor","seconds","breakLengthInMinutes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,iBAAT,QAAkC,sBAAlC;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,KAAK,CAAN,CAA9C;;AAEA,QAAMK,+BAA+B,GAAG,MAAM;AAC5C,UAAMC,cAAc,GAAGH,WAAW,GAAG,EAArC;;AAEA,QAAIG,cAAc,GAAG,EAArB,EAAyB;AACvBF,MAAAA,cAAc,CAAC,EAAD,CAAd;AACD,KAFD,MAEO,IAAIE,cAAc,GAAG,KAAK,EAA1B,EAA8B;AACnCF,MAAAA,cAAc,CAAC,KAAK,EAAN,CAAd;AACD,KAFM,MAEA;AACLA,MAAAA,cAAc,CAACE,cAAD,CAAd;AACD;AACF,GAVD;;AAYA,QAAMC,+BAA+B,GAAG,MAAM;AAC5CH,IAAAA,cAAc,CAACD,WAAW,GAAG,EAAf,CAAd;AACD,GAFD;;AAIA,WAASK,wBAAT,CAAkCC,IAAlC,EAAwC;AACtC,UAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWH,IAAI,GAAG,EAAlB,CAAhB;AACA,UAAMI,OAAO,GAAGJ,IAAI,GAAG,EAAvB,CAFsC,CAEX;;AAC3B,WAAQ,GAAEC,OAAQ,IAAGG,OAAQ,GAA7B;AACD;;AACD,QAAMC,oBAAoB,GAAGb,iBAAiB,CAACE,WAAD,CAA9C;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAC,kBAAhB;AAAmC,mBAAY,gBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAG,IAAA,EAAE,EAAC,aAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAqCW,oBAArC,CAFF,CADF,eAME;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,mBAFZ;AAGE,mBAAY,gBAHd;AAIE,IAAA,OAAO,EAAET,+BAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME;AAAM,IAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CAFF,eAWE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,mBAFZ;AAGE,mBAAY,gBAHd;AAIE,IAAA,OAAO,EAAEE,+BAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CAXF,CANF,CADF,CADF,CADF;AAiCD,CA3DD;;AA6DA,eAAeL,KAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { secondsToDuration } from \"../../utils/duration\";\r\n\r\nconst Break = () => {\r\n  const [breakLength, setBreakLength] = useState(60 * 5);\r\n\r\n  const decrementBreakLengthByOneMinute = () => {\r\n    const newBreakLength = breakLength - 60;\r\n\r\n    if (newBreakLength < 60) {\r\n      setBreakLength(60);\r\n    } else if (newBreakLength > 60 * 15) {\r\n      setBreakLength(60 * 15);\r\n    } else {\r\n      setBreakLength(newBreakLength);\r\n    }\r\n  };\r\n\r\n  const incrementBreakLengthByOneMinute = () => {\r\n    setBreakLength(breakLength + 60);\r\n  };\r\n\r\n  function breakLengthInMinutesFunc(time) {\r\n    const minutes = Math.floor(time / 60);\r\n    const seconds = time % 60; // get the remainder\r\n    return `${minutes}:${seconds}0`;\r\n  }\r\n  const breakLengthInMinutes = secondsToDuration(breakLength);\r\n\r\n  return (\r\n    <div className=\"col\">\r\n      <div className=\"float-right\">\r\n        <div className=\"input-group input-group-lg mb-2\">\r\n          <span className=\"input-group-text\" data-testid=\"duration-break\">\r\n            {/* TODO: Update this text to display the current break session duration */}\r\n            <p id=\"break-label\">Break Duration: {breakLengthInMinutes}</p>\r\n            {/* <p id=\"break-length\">{breakLength}</p> */}\r\n          </span>\r\n          <div className=\"input-group-append\">\r\n            {/* TODO: Implement decreasing break duration and disable during a focus or break session*/}\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-secondary\"\r\n              data-testid=\"decrease-break\"\r\n              onClick={decrementBreakLengthByOneMinute}\r\n            >\r\n              <span className=\"oi oi-minus\" />\r\n            </button>\r\n            {/* TODO: Implement increasing break duration and disable during a focus or break session*/}\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-secondary\"\r\n              data-testid=\"increase-break\"\r\n              onClick={incrementBreakLengthByOneMinute}\r\n            >\r\n              <span className=\"oi oi-plus\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Break;\r\n"]},"metadata":{},"sourceType":"module"}